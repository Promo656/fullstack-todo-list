[{"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/App.tsx":"1","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/navbar/navbar.tsx":"2","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/index.tsx":"3","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/redux/store.ts":"4","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/redux/boardReducer.ts":"5","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/boards/boards.tsx":"6","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/redux/todoListReducer.ts":"7","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/path/todoListsContainer.tsx":"8","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/todoLists/todoList/todoList.tsx":"9","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/boards/board/board.tsx":"10","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/stories/todoList/todoList.stories.tsx":"11","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/stories/Button.stories.tsx":"12","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/task/taskContainer.tsx":"13","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/redux/taskReducer.ts":"14","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/task/task.tsx":"15","/Users/egor/Desktop/projects/own/fullstack-todo-list/src/path/boardsContainer.tsx":"16"},{"size":485,"mtime":1616870925370,"results":"17","hashOfConfig":"18"},{"size":8820,"mtime":1617215021356,"results":"19","hashOfConfig":"18"},{"size":468,"mtime":1616872445786,"results":"20","hashOfConfig":"18"},{"size":633,"mtime":1617308051213,"results":"21","hashOfConfig":"18"},{"size":588,"mtime":1617310431680,"results":"22","hashOfConfig":"18"},{"size":688,"mtime":1617214086728,"results":"23","hashOfConfig":"18"},{"size":509,"mtime":1616875306100,"results":"24","hashOfConfig":"18"},{"size":814,"mtime":1617307085913,"results":"25","hashOfConfig":"18"},{"size":2079,"mtime":1617307779248,"results":"26","hashOfConfig":"18"},{"size":1416,"mtime":1617215167095,"results":"27","hashOfConfig":"18"},{"size":603,"mtime":1616948366471,"results":"28","hashOfConfig":"18"},{"size":804,"mtime":1616878031532,"results":"29","hashOfConfig":"18"},{"size":592,"mtime":1617307847846,"results":"30","hashOfConfig":"18"},{"size":893,"mtime":1617308712673,"results":"31","hashOfConfig":"18"},{"size":982,"mtime":1617224009108,"results":"32","hashOfConfig":"18"},{"size":626,"mtime":1617219164786,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ps6lcr",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/App.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/navbar/navbar.tsx",["69","70"],"import React from 'react';\nimport {createStyles, fade, makeStyles, Theme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport {useHistory} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        grow: {\n            flexGrow: 1,\n            marginBottom: theme.spacing(1)\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        search: {\n            position: 'relative',\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade(theme.palette.common.white, 0.15),\n            '&:hover': {\n                backgroundColor: fade(theme.palette.common.white, 0.25),\n            },\n            marginRight: theme.spacing(2),\n            marginLeft: 0,\n            width: '100%',\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: theme.spacing(3),\n                width: 'auto',\n            },\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 0),\n            // vertical padding + font size from searchIcon\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create('width'),\n            width: '100%',\n            [theme.breakpoints.up('md')]: {\n                width: '20ch',\n            },\n        },\n        sectionDesktop: {\n            display: 'none',\n            [theme.breakpoints.up('md')]: {\n                display: 'flex',\n            },\n        },\n        sectionMobile: {\n            display: 'flex',\n            [theme.breakpoints.up('md')]: {\n                display: 'none',\n            },\n        },\n        reButton: {\n            color: \"inherit\"\n        }\n    }),\n);\n\nexport default function Navbar() {\n    const history = useHistory()\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const gotoBoards = () => {\n        history.push('/111/boards')\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={menuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                    <Badge badgeContent={4} color=\"secondary\">\n                        <MailIcon/>\n                    </Badge>\n                </IconButton>\n                <p>Messages</p>\n            </MenuItem>\n            <MenuItem>\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n                    <Badge badgeContent={11} color=\"secondary\">\n                        <NotificationsIcon/>\n                    </Badge>\n                </IconButton>\n                <p>Notifications</p>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle/>\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <IconButton classes={{root: classes.reButton}} onClick={gotoBoards}>\n                        <DashboardIcon/>\n                    </IconButton>\n                    {/* <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon/>\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{'aria-label': 'search'}}\n                        />\n                    </div>*/}\n                    <div className={classes.grow}/>\n                    <div className={classes.sectionDesktop}>\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon/>\n                            </Badge>\n                        </IconButton>\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon/>\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle/>\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleMobileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon/>\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderMobileMenu}\n            {renderMenu}\n        </div>\n    );\n}\n",["71","72"],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/index.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/redux/store.ts",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/redux/boardReducer.ts",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/boards/boards.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/redux/todoListReducer.ts",[],["73","74"],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/path/todoListsContainer.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/todoLists/todoList/todoList.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/boards/board/board.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/stories/todoList/todoList.stories.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/stories/Button.stories.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/task/taskContainer.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/redux/taskReducer.ts",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/components/task/task.tsx",[],"/Users/egor/Desktop/projects/own/fullstack-todo-list/src/path/boardsContainer.tsx",[],{"ruleId":"75","severity":1,"message":"76","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":17},{"ruleId":"75","severity":1,"message":"79","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":18},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},"@typescript-eslint/no-unused-vars","'InputBase' is defined but never used.","Identifier","unusedVar","'SearchIcon' is defined but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],["86"],["87"],"no-global-assign","no-unsafe-negation"]